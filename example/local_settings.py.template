import logging
import os

#
# Secret Key Configuration
#

# SECRET_KEY = '$w4kg3+b1nm69bya+un7si^3e)c_e410+ua82!pta(s@-8^730'

#
# Database Configuration
#

MONGODB_NAME      = 'fancyashow'
MONGODB_OPTIONS   = { }

#
# Logging Configuration
#

# LOG_ENABLED  = True
# LOG_LEVEL    = logging.DEBUG
# LOG_FORMAT   = "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
# LOG_FILE     = sys.stderr

#
# System Settings
#

FANCY_BASE_DIR    = 'BASE_DIR'

CACHE_BACKEND     = 'file://%s?timeout=600' % os.path.join(FANCY_BASE_DIR, 'cache')

SESSION_ENGINE    = 'django.contrib.sessions.backends.file'
SESSION_FILE_PATH = os.path.join(FANCY_BASE_DIR, 'sessions')

#
# Static Media Settings
#

STATIC_BASE_DIR = os.path.join(FANCY_BASE_DIR,  'static')
SHOW_MEDIA_DIR  = os.path.join('FANCY_BASE_DIR, 'show-media')
SHOW_MEDIA_URL  = '/show-media/'

#
# Loaded Extensions
#

FANCY_EXTENSIONS = (
  'fancyashow.parsers.nyc.*',
  'fancyashow.processing.shows.*',
  'fancyashow.processing.artists.*',
  'fancyashow.systems.myspace',
  'fancyashow.systems.muxtape',
  'fancyashow.systems.twitter',
  'fancyashow.systems.youtube',
  'fancyashow.systems.vimeo'
)

#
# Processing Settings
#

from datetime                import timedelta
from fancyashow.util.storage import SimpleFileSystemStorage

ARTIST_PROCESSOR_SETTINGS = {
  'media-extraction': { 'update_interval': timedelta(hours = 24) },
  'profile-parser':   { 'update_interval': timedelta(days = 7)   }
}

show_storage = SimpleFileSystemStorage(location = SHOW_MEDIA_DIR, base_url = SHOW_MEDIA_URL)

SHOW_PROCESSOR_SETTINGS = {
  'download-image':       { 'storage': show_storage                                },
  'polaroid-image':       { 'storage': show_storage, 'width': 300, 'height': 170   },
  'artist-processor':     { 'artist_processor_settings': ARTIST_PROCESSOR_SETTINGS }
}

#
# Miscellaneous Settings
#

ARTIST_HOT_RANKING = 0.10

COMMAND_LOG_DIR = os.path.join(FANCY_BASE_DIR, 'logs')

PARSE_STAT_MAX_HISTORY = 5

PASSWORD_REQUIRED_PASSWORD = 'SET_ME'

#
# Connect to the Database
#

import mongoengine

mongoengine.connect(MONGODB_NAME, **MONGODB_OPTIONS)
